1. What is the output of the following snippet?
tup = (1, 2, 4, 8)tup = tup[-2:-1]tup = tup[-1]print(tup)
A. 44
A. 4
A. (4)
A. (4,)
---------------------
2. Assuming that my_tuple is a correctly created tuple, the fact that tuples are immutablemeans that the following instruction:
my_tuple[1] = my_tuple[1] + my_tuple[0]
A. may be illegal if the tuple contains strings
A. is illegal
A. can be executed if and only if the tuple contains at least two elements
A. is full correct
---------------------
3. Which of the following lines correctly. invoke the function defined below? (Select two answers)
def fun(a, b, c=0): #Body of the function.
A. fun()
A. fun(0, 1, 2)
A. fun(b=0, a=0)
A. fun(b=1)
---------------------
4. The meaning of a positional argument is determined by:
A. its position within the argument list
A. its connection with existing variables
A. its value
A. the argumentâ€™s name specified along with its value
---------------------
5. What will happen when you attempt to run the following code?
print(Hello, World)
A. The code will raise the AttributeError exception.
A. The code will raise the systemError exception.
A. The code will raise the ValueError exception.
A. The code will print Hello World to the console.
A. The code will raise the TyepError exception.
---------------------
6. The following snippet:
def func(a, b): reeturn b ** aprint(func(b=2, 2))
A. will output 4
A. will output None
A. will output 2
A. is erroneous
---------------------
7. The following snippet:
def function_1(a): return Nonedef function_2(a): return function_1(a) * functin_1(a)print(function_2(2))
A. will output 16
A. will crate a runtime error
A. will output 4
A. will output 2
---------------------
8. What is the output of the following snippet?
def fun(x): if c % 2 == 0: return 1 else: return 2print(fun(fun(2)))
A. 2
A. None
A. 1
A. the code will cause a runtime error
A. 2
---------------------
9. What is the output of the following piece of code?
print("a", "b", "c", sep="sep")
A. a b c
A. abc
A. asepbsepcsep
A. asepbsepc
---------------------
10. Which of the following sentences are true about the code? (Select two answers)
nums = [1, 2, 3]vals = nums
A. nums and vals are different names of the same list
A. vals is longer than nums
A. nums and vals are different lists
A. nums has the same length as vals
---------------------
11. What is the output of the following snippet?
my_list = [1, 2]for v in range(2): my_list.insert(-1, my_list[v])print(my_list)
A. [1, 2, 2, 2]
A. [1, 2, 1, 2]
A. [2, 1, 1, 2]
A. [1, 1, 1, 2]
---------------------
12. What is the output of the following snippet?
dct = {}dct['1'] = (1, 2)dct['2'] = (2, 1)for x in dct.keys(): print(dct[x][1], end="")
A. 21
A. (2,1)
A. 12
A. (1,2)
---------------------
13. What is the output of the following piece of code?
x = 1 // 5 + 1 / 5print(x)
A. 0.0
A. 0
A. 0.4
A. 0.2
---------------------
14. What is the output of the following piece of code?
x = 1y = 2x, y z = x, x, yz, y, z = x, y, zprint(x, y, z)
A. 2 1 2
A. 1 2 2
A. 1 1 2
A. 1 2 1
---------------------
15. The result of the following division:
1 // 2
A. is equal to 0.5
A. is equal to 0
A. is equal to 0.0
A. cannot be predicted
---------------------
16. What is the output of the following snippet?
def fun(inp =2, out =3): return inp * outprint(fun(out =2))
A. 4
A. 6
A. 2
A. the snippet is erroneous and will cause SyntaxError
---------------------
17. What is the expected behavior of the following program?
foo = (1, 2, 3)foo.index(0)
A. The program will cause a ValueError exception.
A. The program will output 1 to the screen.
A. The program will cause a SyntaxError exception.
A. The program will cause a TypeError exception.
A. The program will cause an AttributeError exception.
---------------------
18. What is the output of the following snippet?
def fun(x, y): if x == y: return x else: return fun(x, y-1)print(fun(0,3))
A. 1
A. 2
A. the snippet will cause a runtime error
A. 0
---------------------
19. How many element does the lst list contain?
lst = [i for i in range(-1, -2)]
A. two
A. three
A. zero
A. one
---------------------
20. What is the output of the following piece of code if the user enters two lines containing 2 and 4 respectively?
x = float(input())y = float(input())print(y **(1 / x))
A. 4.0
A. 2.0
A. 0.0
A. 1.0
---------------------
21. What is the output of the following code if the user enters a 0 ?
try: value = input("Enter a value: ") print(int(value) / len(value))except ValueError: print("Bad input...")except ZeroDivisionError: print("Very bad input...")except TypeErrorq: print("Very very bad input...")except: print("Booo!")
A. Very bad input...
A. Very very bad input...
A. Bad input...
A. Booo!
A. 0.0
A. 1.0
---------------------
22. What is the output of the following snippet?
dct = {'one': 'two', 'three': 'one', 'two': 'three'}v = dct['three']for k in range(len(dct)): v = dct[v]print(v)
A. two
A. ('one', 'two', 'three')
A. three
A. one
---------------------
23. What value will be assigned to the x variable?
z = 0y = 0x = y < z and z > y or y > z and z < y
A. False
A. 0
A. 1
A. True
---------------------
24. What is the output of the following piece of the code if the user enters two lines containing 3 and 6 respectively?
y = input()x = input()print(x + y)
A. 36
A. 3
A. 63
A. 6
---------------------
25. Which of the following variable names are illegal and will cause the SystemErrorexception? (Select two answers)
A. print
A. in
A. for
A. in
---------------------
26. What is the expected behavior of the following program?
try: print(5/0) break:except: print("Sorry, something went wrong...")except(ValueError, ZeroDivisionError): print("Too bad...")
A. The program will cause a ValueError exception and output the following message Too bad...
A. The program will cause a SyntaxError exception The program will cause a ValueError exception and output a default error message.
A. The program will raise an exception handle by the first except block.
A. The program will cause a ZeroDivisionError exception and output the following message: Toobad...
A. The program will cause a ZeroDivisionError exception and output a default error message.
---------------------
27. Take a look at the snippet and choose the true statement:
nums = [1, 2, 3]vals = numsdel vals[:]
A. the snippet will cause a runtime error
A. vals is longer than nums
A. nums is longer than vals
A. nums and vals have the same length
---------------------
28. What is the output of the following snippet?
my_list = [x * x for x in range (5)]def fun(lst): del lst[lst[2]] return lstprint(fun(my_list))
A. [0 , 1, 4, 9]
A. [0, 1, 4, 16]
A. [0, 1, 9, 16]
A. [1, 4, 9, 16]
---------------------
29. What is the output of the following snippet?
dd = {"1": "0", "0": "1"}for x in dd.vals(): print(x, end="")
A. 0 1
A. 1 0
A. 0 0
A. the code is erroneous(the dict object has no vals() method)
---------------------
30. What is the output of the following piece of code if the user enters two lines containing 3 and 2 respectively?
x = int(input())y = int(input())x = x % yy = y % xprint(y)
A. 1
A. 3
A. 2
A. 0
---------------------
31. Which of the following snippets shows the correct way of handling multiple excepting ina single except clause?
A. except TypeError, ValueError, ZeroDivisinError: # Some code.
A. except: (TypeError, ValueError, ZeroDivisinError) # Some code.
A. except TypeError, ValueError, ZeroDivisinError # Some code.
A. except: TypeError, ValueError, ZeroDivisinError # Some code.
A. except: (TypeError, ValueError, ZeroDivisinError): # Some code.
A. except (TypeError, ValueError, ZeroDivisinError) # Some code.
---------------------
32. An operator able to check two values are not equal is code as:
A. =/=
A. !=
A. <>
A. not ==
---------------------
33. What will be the output of the following snippet?
a = 1b = 0 a = a ^ bb = a ^ ba = a ^ bprint (a, b)
A. 1 1
A. 0 0
A. 1 0
A. 0 1
---------------------
34. How many stars (*) will the following snippet send to the console?
i =0 while i < i + 2 : i += 1 print("*")else: print("*")
A. zero
A. the snippet will enter an infinite loop, printing one star per line
A. one
A. two
---------------------
35. How many hashes (*) will the following snippet send to the console?
lst = [[x for x in range(3)] for y in range(3)]for r in range(3): for c in rang(3): if lst[r][c] % 2 != 0: print("#")
A. nine
A. zero
A. three
A. six
---------------------
